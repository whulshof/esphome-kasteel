substitutions:
  devicename: new-relay01
  friendly_name: "newrelay"
  device_description: "wifi relay 01"
  static_ip_outdoor: "60"
  static_ip_kasteel: "146"

esphome:
  name: $devicename$static_ip_outdoor-$static_ip_kasteel
  name_add_mac_suffix: true
  comment: ${device_description}
  platform: ESP8266
  board: esp12e
  # on_boot:
  #   - lambda: |-
  #       id(my_ota).set_auth_password("2b76b9fd0e83315a866c18dcea62677c");


wifi:
  # power_save_mode: light
  # networks:
  # - ssid: !secret wifi_ssid_outdooreap
  #   password: !secret wifi_password_outdooreap
  #   manual_ip:
  #     static_ip: 192.168.5.$static_ip_outdoor
  #     gateway: 192.168.5.1
  #     subnet: 255.255.255.224
  # ssid: !secret wifi_ssid_outdoorwrt
  # password: !secret wifi_password_outdoorwrt
  # manual_ip:
  #   static_ip: 192.168.5.$static_ip_outdoor
  #   gateway: 192.168.5.1
  #   subnet: 255.255.255.0
  ssid: !secret wifi_ssid_kasteel
  password: !secret wifi_password_kasteel
  # use_address: 10.222.14.111
  manual_ip:
    static_ip: 10.222.15.$static_ip_kasteel
    gateway: 10.222.14.138
    subnet: 255.255.254.0


# Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${friendly_name} Fallback AP"
    password: !secret ap_password

captive_portal:

# Enable Home Assistant API
api:
  password: !secret api_password
ota:
  password: !secret ota_password
  id: my_ota

web_server:
  port: 80
  auth:
    username: !secret web_username # disabled if absent or empty
    password: !secret web_password # disabled if absent or empty

# Enable logging
logger:

# led wifi status
# status_led:
#   pin: GPIO2

# relay control
switch:
  - platform: gpio
    name: "${friendly_name} Relay"
    icon: "mdi:remote"
    pin: 
     number: 5
    # inverted: true
    id: relay1
    on_turn_on:
      - delay: 400ms
      - switch.turn_off: relay1

# module restart
  - platform: restart
    name: "${friendly_name} Restart"

# module shutdown
  # - platform: shutdown
  #   name: "${friendly_name} Stop"

# # optocoupler with possible relay GPIO4 control
binary_sensor:
#   - platform: gpio
#     pin:
#       number: GPIO5
#       mode: INPUT_PULLUP
#       inverted: True
#     name: "${friendly_name} Optocoupler"

# connection status
  - platform: status
    name: "${friendly_name} Status"

# esphome version and wifi data
text_sensor:
  - platform: version
    name: "${friendly_name} ESPHome Version"
  - platform: wifi_info
    ip_address:
      name: "${friendly_name} IP Address"
    ssid:
      name: "${friendly_name} SSID"
    bssid:
      name: "${friendly_name} BSSID"
    mac_address:
      name: "${friendly_name} Mac Wifi Address"

# WIFI signal level every 60s
sensor:
  - platform: wifi_signal
    name: "${friendly_name} WiFi Signal"
    update_interval: 61s
substitutions:
  devicename: <devicename>
  friendly_name: <friendly_name>
  device_description: <device_description>
  static_ip_outdoor: 192.168.5.XX
  static_ip_kasteel: 10.222.15.XX

esphome:
  name: $devicename
  comment: ${device_description}
  platform: ESP8266
  board: esp12e
#  on_boot:
#    - lambda: |-
#        id(my_ota).set_auth_password("New password");

wifi:
#  use_address: 192.168.5.20
  power_save_mode: light # none, light, high
  networks:
  - ssid: !secret wifi_ssid_outdooreap
    password: !secret wifi_password_outdooreap
    manual_ip:
      static_ip: $static_ip_outdoor
      gateway: 192.168.5.1
      subnet: 255.255.255.224
  - ssid: !secret wifi_ssid_outdoorwrt
    password: !secret wifi_password_outdoorwrt
    manual_ip:
      static_ip: $static_ip_outdoor
      gateway: 192.168.5.1
      subnet: 255.255.255.224
  - ssid: !secret wifi_ssid_kasteel
    password: !secret wifi_password_kasteel
    manual_ip:
      static_ip: $static_ip_kasteel
      gateway: 10.222.14.138
      subnet: 255.255.254.0

# Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${friendly_name} Fallback AP"
    password: !secret ap_password

captive_portal:

# Enable Home Assistant API
api:
  password: !secret api_password
ota:
  password: !secret ota_password
  id: my_ota

web_server:
  port: 80
  auth:
    username: !secret web_username # disabled if absent or empty
    password: !secret web_password # disabled if absent or empty

# Enable logging
logger:

# led wifi status
status_led:
  pin: GPIO2

# relay control
switch:
  # module restart
  - platform: restart
    name: "${friendly_name} Restart"
  # module shutdown
  - platform: shutdown
    name: "${friendly_name} Stop"

binary_sensor:
  # connection status
  - platform: status
    name: "${friendly_name} Status"

# esphome version and wifi data
text_sensor:
  - platform: version
    name: "${friendly_name} ESPHome Version"
  - platform: wifi_info
    ip_address:
      name: "${friendly_name} IP Address"
    ssid:
      name: "${friendly_name} SSID"
    bssid:
      name: "${friendly_name} BSSID"
    mac_address:
      name: "${friendly_name} Mac Wifi Address"

# WIFI signal level every 60s
sensor:
  - platform: wifi_signal
    name: "${friendly_name} WiFi Signal"
    update_interval: 60s